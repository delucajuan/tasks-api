services:
  db:
    image: postgres
    container_name: database
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - db-data:/var/lib/postgresql/data

  api:
    container_name: server
    build: .
    init: true
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - db
    volumes:
      - .:/app
      - /app/node_modules
    command: ['sh', '-c', 'npm run migration:run && npm run dev']

  test:
    container_name: test
    build: .
    environment:
      - NODE_ENV=test
    volumes:
      - .:/app
      - /app/node_modules
    command: ['npm', 'run', 'test']
    profiles:
      - test

volumes:
  db-data:
